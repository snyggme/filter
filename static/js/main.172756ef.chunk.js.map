{"version":3,"sources":["components/data.js","components/Field.js","App.js","serviceWorker.js","index.js"],"names":["data","value","label","text","number","styles","control","provided","state","Object","objectSpread","backgroundColor","isFocused","boxShadow","&:hover","borderColor","border","borderRadius","height","width","dropdownIndicator","color","indicatorSeparator","display","Field","handleFieldTypeChange","option","id","_this","props","field","onFieldChange","operation","input","handleOperationChange","_this$props$field","handleInputChange","event","_this$props$field2","target","handleDelete","onDelete","operations","fields","_this$props","this","_this$props$field3","deletable","options","toConsumableArray","fieldLabel","react_default","a","createElement","className","react_select_esm","onChange","isSearchable","isClearable","type","onClick","md","Component","App","print","handleFieldChange","i","findIndex","setState","concat","slice","addField","e","length","split","newField","deleteField","applyFilter","output","map","_ref","push","toLowerCase","console","log","clearFilter","toprint","prop","_ref2","_this2","_this$state","onSubmit","preventDefault","components_Field","key","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.172756ef.chunk.js","sourcesContent":["export default {\r\n\tfields: [\r\n\t\t{ value: 'text', label: 'Text Field' },\r\n  \t\t{ value: 'number', label: 'Number Field' }\r\n\t],\r\n\toperations: {\r\n\t\ttext: [\r\n\t\t\t{ value: 'Containing', label: 'Containing'},\r\n\t\t\t{ value: 'Exactly matching', label: 'Exactly matching'},\r\n\t\t\t{ value: 'Begins with', label: 'Begins with'},\r\n\t\t\t{ value: 'Ends with', label: 'Ends with'}\r\n\t\t],\r\n\t\tnumber: [\r\n\t\t\t{ value: 'Equal', label: 'Equal'},\r\n\t\t\t{ value: 'Greater than', label: 'Greater than'},\r\n\t\t\t{ value: 'Less than', label: 'Less than'}\r\n\t\t]\r\n\t}\r\n}","import React, { Component } from 'react';\nimport { MdClose } from \"react-icons/md\";\nimport Select from 'react-select';\nimport data from './data';\n\nconst styles = {\n\tcontrol: (provided, state) => ({\n\t  \t...provided,\n\t  \tbackgroundColor: state.isFocused ? '#eaeaea' : 'inherit',\n\t  \tboxShadow: 'none',\n\t  \t'&:hover': { borderColor: 'grey' },\n\t    border: '1px solid grey',\n\t\tborderRadius: '4px',\n\t\theight: '40px',\n\t\twidth: '200px'\n\t}),\n  \tdropdownIndicator: (provided) => ({\n\t  \t...provided,\n\t  \t'&:hover': { color: 'black' },\n\t  \tcolor: 'black'\n  \t}),\n  \tindicatorSeparator: () => ({\n  \t\tdisplay: 'none'\n  \t})\n};\n\nclass Field extends Component {\n\thandleFieldTypeChange = option => {\n\t\tconst { id } = this.props.field;\n\n\t\tthis.props.onFieldChange({\n\t\t\tid,\n\t\t\tvalue: option.value,\n\t\t\toperation: option.value === 'text' ? 'Containing' : 'Equal',\n\t\t\tinput: ''\n\t\t});\n\t}\n\n\thandleOperationChange = option => {\n\t\tconst { id, value, input } = this.props.field;\n\n\t\tthis.props.onFieldChange({\n\t\t\toperation: option.value,\n\t\t\tid,\n\t\t\tvalue,\n\t\t\tinput\n\t\t});\n\t}\n\n\thandleInputChange = event => {\n\t\tconst { id, value, operation } = this.props.field;\n\n\t\tthis.props.onFieldChange({\n\t\t\tid, \n\t\t\tvalue,\n\t\t\toperation,\n\t\t\tinput: event.target.value\n\t\t});\n\t}\n\n\thandleDelete = () => {\n\t\tconst { id } = this.props.field;\n\n\t\tthis.props.onDelete(id);\n\t}\n\n  \trender() {\n  \t\tconst { operations, fields } = data;\n  \t\tconst { field: { value, operation, input }, deletable } = this.props;\n  \t\tconst options = value === 'text' ? [...operations.text] : [...operations.number];\n  \t\tconst fieldLabel = value === 'text' ? 'Text Field' : 'Number Field';\n\n\t    return (\n\t    \t<div className='field'>\n\t    \t\t<Select \n\t    \t\t\tstyles={styles}\n\t    \t\t\tonChange={this.handleFieldTypeChange} \n\t    \t\t\toptions={fields} \n\t    \t\t\tisSearchable={false}\n\t    \t\t\tvalue={{label: fieldLabel}}\n\t    \t\t/>\n\t    \t\t<Select \n\t    \t\t\tstyles={styles}\n\t    \t\t\tonChange={this.handleOperationChange}\n\t    \t\t\toptions={options}\n\t    \t\t\tisSearchable={false}\n\t    \t\t\tisClearable={false}\n\t    \t\t\tvalue={{label: operation}}\n\t    \t\t/>\n\t\t\t\t<input value={input} type={value} onChange={this.handleInputChange} />\n\t\t\t\t{\n\t\t\t\t\tdeletable && \n\t\t\t\t\t\t<span className='close' onClick={this.handleDelete}><MdClose /></span>\n\t\t\t\t}\n\t\t\t</div>\n\t    );\n  \t}\n}\n\nexport default Field;","import React, { Component } from 'react';\nimport Field from './components/Field';\nimport { MdAdd } from \"react-icons/md\";\n\nclass App extends Component {\n\tstate = {\n\t\tprint: '',\n\t\tfields: [{\n\t\t\tid: 'field-1',\n\t\t\tvalue: 'text',\n\t\t\toperation: 'Containing',\n\t\t\tinput: ''\n\t\t}]\n\t}\n\n\thandleFieldChange = field => {\n\t\tconst { id } = field;\n\t\tconst { fields } = this.state;\n\n\t\tconst i = fields.findIndex(field => field.id === id);\n\n\t\tthis.setState({\n\t\t\tfields: [\n\t\t\t\t\t...fields.slice(0, i),\n\t\t\t\t\tfield,\n\t\t\t\t\t...fields.slice(i + 1)\n\t\t\t\t]\n\t\t});\n\t}\n\n\taddField = e => {\n\t\tconst { fields } = this.state;\n\n\t\tconst id = +fields[fields.length - 1].id.split('-')[1] + 1;\n\n\t\tconst newField = {\n\t\t\tid: `field-${id}`,\n\t\t\tvalue: 'text',\n\t\t\toperation: 'Containing',\n\t\t\tinput: ''\n\t\t};\n\n\t\tthis.setState({\n\t\t\tfields: [...fields, newField]\n\t\t});\n\t}\n\n\tdeleteField = id => {\n\t\tconst { fields } = this.state;\n\n\t\tconst i = fields.findIndex(field => field.id === id);\n\n\t\tthis.setState({\n\t\t\tfields: [\n\t\t\t\t\t...fields.slice(0, i),\n\t\t\t\t\t...fields.slice(i + 1)\n\t\t\t\t]\n\t\t});\n\t}\n\n\tapplyFilter = e => {\n\t\tconst { fields } = this.state;\n\n\t\tconst output = {\n\t\t\ttext: [],\n\t\t\tnumber: []\n\t\t};\n\n\t\tfields.map( ({ value, operation, input }) => {\n\t\t\tif (value === 'text') {\n\t\t\t\toutput.text.push({\n\t\t\t\t\toperation: operation.toLowerCase(),\n\t\t\t\t\tvalue: input\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\toutput.number.push({\n\t\t\t\t\toperation: operation.toLowerCase(),\n\t\t\t\t\tvalue: +input\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\n\t\tconsole.log(output);\n\t\t\n\t\tthis.print(output);\n\t}\n\n\tclearFilter = e => {\n\t\tthis.setState({ fields: [{\n\t\t\t\tid: 'field-1',\n\t\t\t\tvalue: 'text',\n\t\t\t\toperation: 'Containing',\n\t\t\t\tinput: ''\n\t\t\t}],\n\t\t\tprint: ''\n\t\t});\n\t}\n\n\tprint = output => {\n\t\tlet toprint = '{\\n';\n\n\t\tfor (let prop in output) {\n\t\t\ttoprint += `    ${prop}: [`;\n\n\t\t\toutput[prop].map( ({ operation, value }) => {\n\t\t\t\tif (typeof value === 'string')\n\t\t\t\t\tvalue = `'${value}'`;\n\n\t\t\t\ttoprint += `\\n        { operation: '${operation}', value: ${value} },`\n\t\t\t});\n\n\t\t\tif (output[prop].length === 0)\n\t\t\t\ttoprint += '], \\n';\n\t\t\telse \n\t\t\t\ttoprint += '\\n    ], \\n';\n\t\t}\n\n\t\ttoprint += '}';\n\n\t\tthis.setState({print: toprint});\n\t}\n\n  \trender() {\n  \t\tconst { fields, print } = this.state;\n  \t\tconst deletable = fields.length > 1;\n\n\t    return (\n\t        <form className='field-container' onSubmit={e => {e.preventDefault()}}>\n\t        \t{\n\t        \t\tfields.map( field => \n\t        \t\t\t<Field \n\t        \t\t\t\tfield={field}\n\t        \t\t\t\tkey={field.id}\n\t        \t\t\t\tdeletable={deletable}\n\t        \t\t\t\tonFieldChange={this.handleFieldChange}\n\t        \t\t\t\tonDelete={this.deleteField}\n\t        \t\t\t/>\n\t        \t\t)\n\t        \t}\n\t        \t{ \n\t        \t\tfields.length !== 10 && \n\t        \t\t\t<div className='btn btn-add' onClick={this.addField} ><MdAdd /> Add condition</div>\n\t        \t}\n\t        \t<hr />\n\t        \t<div className='btn btn-apply' onClick={this.applyFilter} >Apply</div>\n\t        \t<div className='btn btn-clear' onClick={this.clearFilter} >Clear filter</div>\n\t        \t<pre>{print}</pre>\n\t        </form>\n\t    );\n  \t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './styles/index.scss';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}